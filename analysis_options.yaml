# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at
  # https://dart-lang.github.io/linter/lints/index.html.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    prefer_relative_imports: true
    file_names: lowercase_with_underscores
    package_names: lowercase_with_underscores
    slash_for_doc_comments: true
    comment_references: true
    package_api_docs: true
    use_decorated_box: true
    use_colored_box: true
    avoid_returning_null: true
    avoid_private_typedef_functions: true
    avoid_escaping_inner_quotes: true
    no_logic_in_create_state: true
    avoid_print: true
    require_trailing_commas: true
    always_declare_return_types: true
    avoid_type_to_string: false
    avoid_types_as_parameter_names: false
    prefer_void_to_null: true
    always_put_required_named_parameters_first: true

analyzer:
  plugins:
    - dart_code_metrics


dart_code_metrics:
  anti-patterns:
    - long-method
    - long-parameter-list
  metrics:
#    function metrics
    cyclomatic-complexity: 7
    number-of-parameters: 10
    source-lines-of-code: 50
    lines-of-code: 100
    maximum-nesting-level: 3
#    Class metrics
    number-of-methods: 14


  metrics-exclude:
    - test/**

  rules:
    - newline-before-return
    - no-boolean-literal-compare
    - prefer-trailing-comma
    - prefer-conditional-expressions
    - no-equal-then-else
    - no-boolean-literal-compare
    - no-equal-then-else
    - prefer-first
    - prefer-last
    - prefer-immediate-return
    - always-remove-listener
    - avoid-unnecessary-setstate
    - avoid-wrapping-in-padding
    - prefer-single-widget-per-file
    - avoid-collection-methods-with-unrelated-types
    - avoid-unused-parameters
    - binary-expression-operand-order
    - no-boolean-literal-compare
    - prefer-correct-type-name:
        excluded: [ 'exampleExclude' ]
        min-length: 4
        max-length: 40
    - avoid-nested-conditional-expressions:
        acceptable-level: 2
    - prefer-match-file-name:
        exclude:
          - lib/main.dart
    - prefer-correct-identifier-length:
        max-identifier-length: 27
        min-identifier-length: 3
    - member-ordering-extended:
        alphabetize: true
        order:
          - public-late-final-fields
          - public-fields
          - constructors
          - private-late-final-fields
          - private-fields
          - init-state-method
          - build-method
          - did-change-dependencies-method
          - did-update-widget-method
          - public-methods
          - private-methods
          - dispose-method



    # avoid_print: false  # Uncomment to disable the `avoid_print` rule
    # prefer_single_quotes: true  # Uncomment to enable the `prefer_single_quotes` rule

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
